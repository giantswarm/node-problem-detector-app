apiVersion: v1
kind: ConfigMap
metadata:
  name: "node-problem-detector-disk-check"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "labels.common" . | nindent 4 }}
data:
  full-disk-check.sh: |
    #!/bin/bash

    # Define the exit codes as readonly variables
    readonly OK=0
    readonly NONOK=1
    readonly UNKNOWN=2

    dir="$1"

    if [ -z $dir ]
    then
      echo "Error: target dir was not passed as an argument."
      exit $UNKNOWN
    fi

    # Argument is an absolute path, but we mount the host root on /host so we need to adjust it.
    localdir="/host${dir}"

    # Check if the given directory path exists
    if [ ! -d "$localdir" ]; then
      echo "Warning: Dir $dir was not found."
      exit $UNKNOWN
    fi

    # Get the disk where the directory path belongs
    disk_path=$(df "$localdir" --output=target | tail -n1)
    device=$(df "$localdir" --output=source | tail -n1)

    # Get the percentage of used disk space
    used_space=$(df "$disk_path" --output=pcent | tail -n1|sed 's/%//')

    # Check if the disk is full
    if [ $used_space -ge {{ node-problem-detector.usedSpaceThreshold }} ]; then
      echo "Disk $device (mount point $dir) is full."
      exit $NONOK
    fi

    echo "Disk $device (mount point $dir) is not full"
    exit $OK
