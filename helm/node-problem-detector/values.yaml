node-problem-detector:
  image:
    repository: gsoci.azurecr.io/giantswarm/node-problem-detector

  labels:
    application.giantswarm.io/team: phoenix

  usedSpaceThreshold: 99

  settings:
    # Custom monitor definitions to add to Node Problem Detector - to be
    # mounted at /custom-config. These are in addition to pre-packaged monitor
    # definitions provided within the default docker image available at /config:
    # https://github.com/kubernetes/node-problem-detector/tree/master/config
    # settings.custom_monitor_definitions -- Custom plugin monitor config files
    custom_monitor_definitions:
      full-disk-check.json: |
        {
          "plugin": "custom",
          "pluginConfig": {
              "invoke_interval": "60s",
              "timeout": "30s",
              "max_output_length": 80,
              "concurrency": 1,
              "enable_message_change_based_condition_update": false
          },
          "source": "node-problem-detector",
          "metricsReporting": true,
          "conditions": [
            {
              "type": "DiskFullKubelet",
              "reason": "KubeletDiskIsNotFull",
              "message": "/var/lib/kubelet is not full"
            },
            {
              "type": "DiskFullContainerd",
              "reason": "ContainerdDiskIsNotFull",
              "message": "/var/lib/containerd is not full"
            },
            {
              "type": "DiskFullVarLog",
              "reason": "VarLogDiskIsNotFull",
              "message": "/var/log is not full"
            }
          ],
          "rules": [
            {
              "type": "temporary",
              "reason": "KubeletDiskIsFull",
              "path": "/custom-checks/full-disk-check.sh",
              "args": ["/var/lib/kubelet"],
              "timeout": "30s"
            },
            {
              "type": "permanent",
              "condition": "DiskFullKubelet",
              "reason": "KubeletDiskIsFull",
              "path": "/custom-checks/full-disk-check.sh",
              "args": ["/var/lib/kubelet"],
              "timeout": "30s"
            },
            {
              "type": "temporary",
              "reason": "ContainerdDiskIsFull",
              "path": "/custom-checks/full-disk-check.sh",
              "args": ["/var/lib/containerd"],
              "timeout": "30s"
            },
            {
              "type": "permanent",
              "condition": "DiskFullContainerd",
              "reason": "ContainerdDiskIsFull",
              "path": "/custom-checks/full-disk-check.sh",
              "args": ["/var/lib/containerd"],
              "timeout": "30s"
            },
            {
              "type": "temporary",
              "reason": "VarLogDiskIsFull",
              "path": "/custom-checks/full-disk-check.sh",
              "args": ["/var/log"],
              "timeout": "30s"
            },
            {
              "type": "permanent",
              "condition": "DiskFullVarLog",
              "reason": "VarLogDiskIsFull",
              "path": "/custom-checks/full-disk-check.sh",
              "args": ["/var/log"],
              "timeout": "30s"
            }
          ]
        }

    custom_plugin_monitors:
      - /custom-config/full-disk-check.json

  rbac:
    create: true
    pspEnabled: false

  resources:
    requests:
      cpu: 100m
      memory: 100Mi

  extraVolumes:
  - name: full-disk-check
    configMap:
      name: node-problem-detector-disk-check
      defaultMode: 0755
  - name: host
    hostPath:
      path: /

  extraVolumeMounts:
  - name: full-disk-check
    mountPath: /custom-checks
    readOnly: true
  - name: host
    mountPath: /host
    readOnly: true
